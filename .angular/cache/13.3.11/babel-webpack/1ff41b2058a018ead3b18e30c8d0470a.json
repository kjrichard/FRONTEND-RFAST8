{"ast":null,"code":"import _classCallCheck from \"C:\\\\FRONTEND-RFAST83\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\FRONTEND-RFAST83\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ElementRef } from \"@angular/core\";\nimport { ROUTES } from \"../sidebar/sidebar.component\";\nimport { Location } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\n\nfunction NavbarComponent_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"input\", 27);\n    i0.ɵɵelementStart(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_template_38_Template_button_click_2_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var modal_r2 = restoredCtx.$implicit;\n      return modal_r2.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelement(3, \"i\", 29);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport var NavbarComponent = /*#__PURE__*/(function () {\n  var NavbarComponent = /*#__PURE__*/function () {\n    function NavbarComponent(location, element, router, modalService) {\n      var _this = this;\n\n      _classCallCheck(this, NavbarComponent);\n\n      this.element = element;\n      this.router = router;\n      this.modalService = modalService;\n      this.test = new Date();\n      this.mobile_menu_visible = 0;\n      this.isCollapsed = true; // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n      this.updateColor = function () {\n        var navbar = document.getElementsByClassName('navbar')[0];\n\n        if (window.innerWidth < 993 && !_this.isCollapsed) {\n          navbar.classList.add('bg-white');\n          navbar.classList.remove('navbar-transparent');\n        } else {\n          navbar.classList.remove('bg-white');\n          navbar.classList.add('navbar-transparent');\n        }\n      };\n\n      this.location = location;\n      this.sidebarVisible = false;\n    }\n\n    _createClass(NavbarComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this2 = this;\n\n        window.addEventListener(\"resize\", this.updateColor);\n        this.listTitles = ROUTES.filter(function (listTitle) {\n          return listTitle;\n        });\n        var navbar = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\n        this.router.events.subscribe(function (event) {\n          _this2.sidebarClose();\n\n          var $layer = document.getElementsByClassName(\"close-layer\")[0];\n\n          if ($layer) {\n            $layer.remove();\n            _this2.mobile_menu_visible = 0;\n          }\n        });\n      }\n    }, {\n      key: \"collapse\",\n      value: function collapse() {\n        this.isCollapsed = !this.isCollapsed;\n        var navbar = document.getElementsByTagName(\"nav\")[0];\n\n        if (!this.isCollapsed) {\n          navbar.classList.remove(\"navbar-transparent\");\n          navbar.classList.add(\"bg-white\");\n        } else {\n          navbar.classList.add(\"navbar-transparent\");\n          navbar.classList.remove(\"bg-white\");\n        }\n      }\n    }, {\n      key: \"sidebarOpen\",\n      value: function sidebarOpen() {\n        var toggleButton = this.toggleButton;\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n        var html = document.getElementsByTagName(\"html\")[0];\n\n        if (window.innerWidth < 991) {\n          mainPanel.style.position = \"fixed\";\n        }\n\n        setTimeout(function () {\n          toggleButton.classList.add(\"toggled\");\n        }, 500);\n        html.classList.add(\"nav-open\");\n        this.sidebarVisible = true;\n      }\n    }, {\n      key: \"sidebarClose\",\n      value: function sidebarClose() {\n        var html = document.getElementsByTagName(\"html\")[0];\n        this.toggleButton.classList.remove(\"toggled\");\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n\n        if (window.innerWidth < 991) {\n          setTimeout(function () {\n            mainPanel.style.position = \"\";\n          }, 500);\n        }\n\n        this.sidebarVisible = false;\n        html.classList.remove(\"nav-open\");\n      }\n    }, {\n      key: \"sidebarToggle\",\n      value: function sidebarToggle() {\n        // const toggleButton = this.toggleButton;\n        // const html = document.getElementsByTagName('html')[0];\n        var $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\n\n        if (this.sidebarVisible === false) {\n          this.sidebarOpen();\n        } else {\n          this.sidebarClose();\n        }\n\n        var html = document.getElementsByTagName(\"html\")[0];\n\n        if (this.mobile_menu_visible == 1) {\n          // $('html').removeClass('nav-open');\n          html.classList.remove(\"nav-open\");\n\n          if ($layer) {\n            $layer.remove();\n          }\n\n          setTimeout(function () {\n            $toggle.classList.remove(\"toggled\");\n          }, 400);\n          this.mobile_menu_visible = 0;\n        } else {\n          setTimeout(function () {\n            $toggle.classList.add(\"toggled\");\n          }, 430);\n          var $layer = document.createElement(\"div\");\n          $layer.setAttribute(\"class\", \"close-layer\");\n\n          if (html.querySelectorAll(\".main-panel\")) {\n            document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\n          } else if (html.classList.contains(\"off-canvas-sidebar\")) {\n            document.getElementsByClassName(\"wrapper-full-page\")[0].appendChild($layer);\n          }\n\n          setTimeout(function () {\n            $layer.classList.add(\"visible\");\n          }, 100);\n\n          $layer.onclick = function () {\n            //asign a function\n            html.classList.remove(\"nav-open\");\n            this.mobile_menu_visible = 0;\n            $layer.classList.remove(\"visible\");\n            setTimeout(function () {\n              $layer.remove();\n              $toggle.classList.remove(\"toggled\");\n            }, 400);\n          }.bind(this);\n\n          html.classList.add(\"nav-open\");\n          this.mobile_menu_visible = 1;\n        }\n      }\n    }, {\n      key: \"getTitle\",\n      value: function getTitle() {\n        var titlee = this.location.prepareExternalUrl(this.location.path());\n\n        if (titlee.charAt(0) === \"#\") {\n          titlee = titlee.slice(1);\n        }\n\n        for (var item = 0; item < this.listTitles.length; item++) {\n          if (this.listTitles[item].path === titlee) {\n            return this.listTitles[item].title;\n          }\n        }\n\n        return \"Dashboard\";\n      }\n    }, {\n      key: \"open\",\n      value: function open(content) {\n        var _this3 = this;\n\n        this.modalService.open(content, {\n          windowClass: 'modal-search'\n        }).result.then(function (result) {\n          _this3.closeResult = \"Closed with: \".concat(result);\n        }, function (reason) {\n          _this3.closeResult = \"Dismissed \".concat(_this3.getDismissReason(reason));\n        });\n      }\n    }, {\n      key: \"getDismissReason\",\n      value: function getDismissReason(reason) {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return \"with: \".concat(reason);\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        window.removeEventListener(\"resize\", this.updateColor);\n      }\n    }, {\n      key: \"cerrarSesion\",\n      value: function cerrarSesion() {\n        localStorage.removeItem('token');\n        this.router.navigateByUrl('/login');\n      }\n    }]);\n\n    return NavbarComponent;\n  }();\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgbModal));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 40,\n    vars: 7,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"navbar-transparent\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-toggle\", \"d-inline\"], [\"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\"], [\"aria-label\", \"Toggle navigation\", \"aria-controls\", \"collapseExample\", \"id\", \"navigation\", \"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"navbar-kebab\"], [\"id\", \"navigation\", 1, \"navbar-collapse\", 3, \"ngbCollapse\"], [1, \"navbar-nav\", \"ml-auto\"], [\"ngbDropdown\", \"\", 1, \"nav-item\"], [\"data-toggle\", \"dropdown\", \"href\", \"javascript:void(0)\", \"ngbDropdownToggle\", \"\", 1, \"nav-link\"], [1, \"photo\"], [\"alt\", \"Profile Photo\", \"src\", \"assets/img/anime3.png\"], [1, \"caret\", \"d-none\", \"d-lg-block\", \"d-xl-block\"], [1, \"d-lg-none\"], [\"ngbDropdownMenu\", \"\", 1, \"dropdown-navbar\"], [1, \"nav-link\"], [\"href\", \"javascript:void(0)\", \"ngbDropdownItem\", \"\", 1, \"nav-item\"], [1, \"btn\", \"btn-light\"], [1, \"btn\", \"btn-light\", 3, \"click\"], [1, \"separator\", \"d-lg-none\"], [\"content\", \"\"], [1, \"modal-header\"], [\"id\", \"inlineFormInputGroup\", \"placeholder\", \"SEARCH\", \"type\", \"text\", 1, \"form-control\"], [\"aria-label\", \"Close\", \"data-dismiss\", \"modal\", \"type\", \"button\", 1, \"close\", 3, \"click\"], [1, \"tim-icons\", \"icon-simple-remove\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_4_listener() {\n          return ctx.sidebarToggle();\n        });\n        i0.ɵɵelement(5, \"span\", 5)(6, \"span\", 6)(7, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"a\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_11_listener() {\n          return ctx.collapse();\n        });\n        i0.ɵɵelement(12, \"span\", 10)(13, \"span\", 10)(14, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"ul\", 12)(17, \"li\", 13)(18, \"a\", 14)(19, \"div\", 15);\n        i0.ɵɵelement(20, \"img\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"b\", 17);\n        i0.ɵɵelementStart(22, \"p\", 18);\n        i0.ɵɵtext(23, \"Log out\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"ul\", 19)(25, \"li\", 20)(26, \"a\", 21)(27, \"button\", 22);\n        i0.ɵɵtext(28, \"Perfil\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"li\", 20)(30, \"a\", 21)(31, \"button\", 22);\n        i0.ɵɵtext(32, \"Ajustes\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"li\", 20)(34, \"a\", 21)(35, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_35_listener() {\n          return ctx.cerrarSesion();\n        });\n        i0.ɵɵtext(36, \"Cerrar\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(37, \"li\", 24);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(38, NavbarComponent_ng_template_38_Template, 4, 0, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate2(\" \", ctx.getTitle(), \" - \", i0.ɵɵpipeBind2(10, 4, ctx.test, \"d MMM YYY\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-expanded\", !ctx.isCollapsed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngbCollapse\", ctx.isCollapsed);\n      }\n    },\n    directives: [i3.NgbNavbar, i3.NgbCollapse, i3.NgbDropdown, i3.NgbDropdownToggle, i3.NgbDropdownMenu, i3.NgbDropdownItem],\n    pipes: [i1.DatePipe],\n    styles: [\"\"]\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}